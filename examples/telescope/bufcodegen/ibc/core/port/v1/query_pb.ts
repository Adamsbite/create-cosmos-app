// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file ibc/core/port/v1/query.proto (package ibc.core.port.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Counterparty, Order } from "../../channel/v1/channel_pb.js";

/**
 * QueryAppVersionRequest is the request type for the Query/AppVersion RPC method
 *
 * @generated from message ibc.core.port.v1.QueryAppVersionRequest
 */
export class QueryAppVersionRequest extends Message<QueryAppVersionRequest> {
  /**
   * port unique identifier
   *
   * @generated from field: string port_id = 1;
   */
  portId = "";

  /**
   * connection unique identifier
   *
   * @generated from field: string connection_id = 2;
   */
  connectionId = "";

  /**
   * whether the channel is ordered or unordered
   *
   * @generated from field: ibc.core.channel.v1.Order ordering = 3;
   */
  ordering = Order.NONE_UNSPECIFIED;

  /**
   * counterparty channel end
   *
   * @generated from field: ibc.core.channel.v1.Counterparty counterparty = 4;
   */
  counterparty?: Counterparty;

  /**
   * proposed version
   *
   * @generated from field: string proposed_version = 5;
   */
  proposedVersion = "";

  constructor(data?: PartialMessage<QueryAppVersionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ibc.core.port.v1.QueryAppVersionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "port_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "connection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "ordering", kind: "enum", T: proto3.getEnumType(Order) },
    { no: 4, name: "counterparty", kind: "message", T: Counterparty },
    { no: 5, name: "proposed_version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAppVersionRequest {
    return new QueryAppVersionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAppVersionRequest {
    return new QueryAppVersionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAppVersionRequest {
    return new QueryAppVersionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAppVersionRequest | PlainMessage<QueryAppVersionRequest> | undefined, b: QueryAppVersionRequest | PlainMessage<QueryAppVersionRequest> | undefined): boolean {
    return proto3.util.equals(QueryAppVersionRequest, a, b);
  }
}

/**
 * QueryAppVersionResponse is the response type for the Query/AppVersion RPC method.
 *
 * @generated from message ibc.core.port.v1.QueryAppVersionResponse
 */
export class QueryAppVersionResponse extends Message<QueryAppVersionResponse> {
  /**
   * port id associated with the request identifiers
   *
   * @generated from field: string port_id = 1;
   */
  portId = "";

  /**
   * supported app version
   *
   * @generated from field: string version = 2;
   */
  version = "";

  constructor(data?: PartialMessage<QueryAppVersionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ibc.core.port.v1.QueryAppVersionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "port_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAppVersionResponse {
    return new QueryAppVersionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAppVersionResponse {
    return new QueryAppVersionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAppVersionResponse {
    return new QueryAppVersionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAppVersionResponse | PlainMessage<QueryAppVersionResponse> | undefined, b: QueryAppVersionResponse | PlainMessage<QueryAppVersionResponse> | undefined): boolean {
    return proto3.util.equals(QueryAppVersionResponse, a, b);
  }
}

